name: Deploy GitHub Pages

# Trigger deployment when:
# 1. APT repository is updated (after successful package builds)
# 2. Manual trigger for immediate deployment
# 3. Push to main branch (for index.html updates)
on:
  workflow_run:
    workflows: ["Build and Deploy PiTrac Packages"]
    types:
      - completed
    branches: [main]
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even if no changes detected'
        type: boolean
        required: false
        default: false
  push:
    branches: [main]
    paths:
      - 'index.html'
      - '.github/workflows/pages.yml'
      - 'dists/**'
      - 'pool/**'
      - '*.asc'

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      should-deploy: ${{ steps.changes.outputs.should-deploy }}
      apt-files-exist: ${{ steps.check-apt.outputs.apt-files-exist }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check if APT repository files exist
        id: check-apt
        run: |
          if [ -d "dists" ] && [ -d "pool" ] && [ -f "index.html" ]; then
            echo "apt-files-exist=true" >> $GITHUB_OUTPUT
            echo "APT repository structure is complete"
          else
            echo "apt-files-exist=false" >> $GITHUB_OUTPUT
            echo "APT repository structure is incomplete"
            echo "Missing directories/files:"
            [ ! -d "dists" ] && echo "  - dists/"
            [ ! -d "pool" ] && echo "  - pool/"
            [ ! -f "index.html" ] && echo "  - index.html"
          fi

      - name: Check if deployment needed
        id: changes
        run: |
          # Deploy if:
          # 1. Triggered by successful package build workflow
          # 2. Manual dispatch with force_deploy
          # 3. Changes to web assets (index.html, workflows)
          # 4. Changes to APT repository files

          SHOULD_DEPLOY="false"

          if [ "${{ github.event_name }}" = "workflow_run" ] && [ "${{ github.event.workflow_run.conclusion }}" = "success" ]; then
            echo "Triggered by successful package build - deploying"
            SHOULD_DEPLOY="true"
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ "${{ github.event.inputs.force_deploy }}" = "true" ]; then
            echo "Manual force deployment requested"
            SHOULD_DEPLOY="true"
          elif [ "${{ github.event_name }}" = "push" ]; then
            echo "Push to main branch detected - checking for relevant changes"
            SHOULD_DEPLOY="true"
          fi

          echo "should-deploy=$SHOULD_DEPLOY" >> $GITHUB_OUTPUT

  build:
    needs: check-changes
    if: needs.check-changes.outputs.should-deploy == 'true' && needs.check-changes.outputs.apt-files-exist == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Verify APT repository integrity
        run: |
          echo "Verifying APT repository structure..."

          # Check required files exist
          if [ ! -f "dists/bookworm/Release" ]; then
            echo "Missing Release file"
            exit 1
          fi

          if [ ! -f "dists/bookworm/InRelease" ]; then
            echo "Missing InRelease file"
            exit 1
          fi

          # Check if we have any packages
          PACKAGE_COUNT=$(find pool -name "*.deb" | wc -l)
          if [ "$PACKAGE_COUNT" -eq 0 ]; then
            echo "No .deb packages found in pool/"
          else
            echo "Found $PACKAGE_COUNT packages"
          fi

          # Check index.html exists
          if [ ! -f "index.html" ]; then
            echo "Missing index.html"
            exit 1
          fi

          echo "APT repository structure verified"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Create site structure
        run: |
          echo "Creating GitHub Pages site structure..."

          # Create a temporary directory for the site
          mkdir -p _site

          # Copy all APT repository files
          cp -r dists/ _site/
          cp -r pool/ _site/

          # Copy GPG keys if they exist
          if [ -f "pitrac-repo.asc" ]; then
            cp pitrac-repo.asc _site/
          fi

          # Copy the main index.html
          cp index.html _site/

          # Create a robots.txt to allow indexing
          cat > _site/robots.txt << EOF
          User-agent: *
          Allow: /

          # APT Repository
          Allow: /dists/
          Allow: /pool/
          Allow: /*.asc
          EOF

          # Create a .nojekyll file to prevent Jekyll processing
          touch _site/.nojekyll

          # Generate a basic sitemap.xml
          cat > _site/sitemap.xml << EOF
          <?xml version="1.0" encoding="UTF-8"?>
          <urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9">
            <url>
              <loc>https://pitracml.github.io/packages/</loc>
              <changefreq>weekly</changefreq>
              <priority>1.0</priority>
            </url>
            <url>
              <loc>https://pitracml.github.io/packages/dists/bookworm/Release</loc>
              <changefreq>weekly</changefreq>
              <priority>0.8</priority>
            </url>
          </urlset>
          EOF

          echo "Site structure created:"
          find _site -type f | head -20

          # Show total files and size
          FILE_COUNT=$(find _site -type f | wc -l)
          TOTAL_SIZE=$(du -sh _site | cut -f1)
          echo "Total files: $FILE_COUNT"
          echo "Total size: $TOTAL_SIZE"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  deploy:
    needs: [check-changes, build]
    if: needs.check-changes.outputs.should-deploy == 'true'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

      - name: Verify deployment
        run: |
          echo "Deployment completed successfully!"
          echo "Site URL: ${{ steps.deployment.outputs.page_url }}"
          echo ""
          echo "APT Repository Usage:"
          echo "deb [arch=arm64] ${{ steps.deployment.outputs.page_url }} bookworm main"
          echo ""
          echo "Test the deployment:"
          echo "curl -I ${{ steps.deployment.outputs.page_url }}dists/bookworm/Release"

  notify:
    needs: [check-changes, build, deploy]
    if: always() && needs.check-changes.outputs.should-deploy == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Report deployment status
        run: |
          if [ "${{ needs.deploy.result }}" = "success" ]; then
            echo "GitHub Pages deployment successful!"
            echo "APT Repository is now available at: https://pitracml.github.io/packages/"
            echo ""
            echo "Users can add this repository with:"
            echo "echo 'deb [arch=arm64] https://pitracml.github.io/packages bookworm main' | sudo tee /etc/apt/sources.list.d/pitrac.list"
          else
            echo "GitHub Pages deployment failed"
            echo "Check the deployment logs for details"
            exit 1
          fi